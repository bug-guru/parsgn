ConfigFile:
    (^I* Rule)+ ^I*;

Rule:
    (Prefix ^I*)*
    Name
    ^I*
    (Quantifier ^I*)?
    ^":"
    ExpressionList
    ^";"
    ;

I: ^WhiteSpace | Comment;

WhiteSpace: ^(#WHITESPACE)+;

Comment: =(SingleLineComment | MultiLineComment);

SingleLineComment: ^"//" #ANY{^#EOL};

MultiLineComment: ^"/*" #ANY{^"*/};

Name: =(#UNICODE_IDENTIFIER_START #UNICODE_IDENTIFIER_PART*);

Expression:
    (Prefix ^I*)*
    OneOf | Reference | CharType | String | Sequence
    ^I*
    (Quantifier | Until ^I*)?;

ExpressionList: (^I* Expression)+;

Prefix: MakeValue | Silent;

MakeValue: ^"=";

Silent: ^"^";

Quantifier:
      ZeroOrOne
    | OneOrMore
    | ZeroOrMore
    | ExactlyNTimes
    | AtLeastNTimes
    | AtLeastNButNotMoreThanMTimes;

ZeroOrOne: ^"?";

OneOrMore: ^"+";

ZeroOrMore: ^"*";

Until: ^"{" ^I* Expression ^I* ^"}";

ExactlyNTimes: ^"{" ^I* =Number ^I* ^"}";

AtLeastNTimes: ^"{" ^I* =Number ^I* ^"," ^I* ^"}";

AtLeastNButNotMoreThanMTimes: ^"{" ^I* Min ^I* ^"," ^I* Max ^I* ^"}";

Number: #DIGIT+;

Min: =Number;

Max: =Number;

OneOf: OneOfItem (^I* ^"|" ^I* OneOfItem)+;

OneOfItem: Reference | CharType | String | Sequence;

Reference: Name;

CharType: ^"#" Name; //TODO: list all possible char types

String: =(^"\"" ("\\\"" | "\\\\" | #ANY){^"\""}));

Sequence: "(" ExpressionList ")";