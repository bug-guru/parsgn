ConfigFile:
    (I Rule)+ I #EOF;

Rule:
    Name I ":" ExpressionList ";";

I: (#WHITESPACE | SingleLineComment | MultiLineComment)*;

SingleLineComment: "//" #VALID{#LINE_SEPARATOR};

MultiLineComment: "/*" #VALID{"*/"};

Name: #UNICODE_IDENTIFIER_START #UNICODE_IDENTIFIER_PART*;

ExpressionList: (I Expression)+;

Expression:
    OneOf | Reference | CharType | String | Sequence
    ExpressionSuffix?;

ExpressionSuffix: I (Quantifier | Until) I;

Quantifier:
      ZeroOrOne
    | OneOrMore
    | ZeroOrMore
    | ExactlyNTimes
    | AtLeastMinTimes
    | AtLeastMinButNotMoreThanMaxTimes;

ZeroOrOne: "?";

OneOrMore: "+";

ZeroOrMore: "*";

Until: "{" I Expression I "}";

ExactlyNTimes: "{" I Number I "}";

AtLeastMinTimes: "{" I Number I "," I "}";

AtLeastMinButNotMoreThanMaxTimes: "{" I Min I "," I Max I "}";

Number: #DIGIT+;

Min: Number;

Max: Number;

OneOf: OneOfVariant1 | OneOfVariant2;

OneOfVariant1: "(" I OneOfVariant2 I ")";

OneOfVariant2: OneOfExpression (I "|" I OneOfExpression)+;

OneOfExpression:
    Reference | CharType | String | Sequence
    ExpressionSuffix?;

Reference: Name;

CharType: "#" Name; //TODO: list all possible char types

String: "\"" ("\\\"" -> "\"" | "\\\\" -> "\\" | #VALID){"\""} Transform?;

Transform: I "->" I String;

Sequence: "(" ExpressionList ")";
